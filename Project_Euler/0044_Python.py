


# Project Euler: 44
"""
Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?
"""

import time

def euler_44():

  listo = True
  n = 1
  
  while listo:

    n += 1
    x = (n/2)*(3*n-1)

    for i in range(1,n):
      y = (i/2)*(3*i-1)

      if is_pentagon(x+y) and is_pentagon(x-y):
        listo = False
        break

  return int(abs(x-y))

def is_pentagon(x):
  # inversa:  (1 + (1+24*z)**0.5)/6
  ret = (1 + (1+24*x)**0.5)/6
  return ret == int(ret)


##############################################

if __name__ == "__main__":
  
  start = time.time()

  num = euler_44()

  print("El valor es: {}".format(num))


  print("\nTiempo de operación:",time.time()-start, "seg.")
    
##############################################

"""
El valor es: 5482660

Tiempo de operación: 7.373485803604126 seg.
"""

